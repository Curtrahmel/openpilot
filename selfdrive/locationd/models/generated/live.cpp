#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_775903400974484091) {
   out_775903400974484091[0] = 0;
   out_775903400974484091[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_775903400974484091[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_775903400974484091[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_775903400974484091[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_775903400974484091[5] = -sin(in_vec[1]);
   out_775903400974484091[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_775903400974484091[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_775903400974484091[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_775903400974484091[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_775903400974484091[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_775903400974484091[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_775903400974484091[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_775903400974484091[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_775903400974484091[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_775903400974484091[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_775903400974484091[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_775903400974484091[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4354435775177582705) {
   out_4354435775177582705[0] = delta_x[0] + nom_x[0];
   out_4354435775177582705[1] = delta_x[1] + nom_x[1];
   out_4354435775177582705[2] = delta_x[2] + nom_x[2];
   out_4354435775177582705[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4354435775177582705[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4354435775177582705[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4354435775177582705[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4354435775177582705[7] = delta_x[6] + nom_x[7];
   out_4354435775177582705[8] = delta_x[7] + nom_x[8];
   out_4354435775177582705[9] = delta_x[8] + nom_x[9];
   out_4354435775177582705[10] = delta_x[9] + nom_x[10];
   out_4354435775177582705[11] = delta_x[10] + nom_x[11];
   out_4354435775177582705[12] = delta_x[11] + nom_x[12];
   out_4354435775177582705[13] = delta_x[12] + nom_x[13];
   out_4354435775177582705[14] = delta_x[13] + nom_x[14];
   out_4354435775177582705[15] = delta_x[14] + nom_x[15];
   out_4354435775177582705[16] = delta_x[15] + nom_x[16];
   out_4354435775177582705[17] = delta_x[16] + nom_x[17];
   out_4354435775177582705[18] = delta_x[17] + nom_x[18];
   out_4354435775177582705[19] = delta_x[18] + nom_x[19];
   out_4354435775177582705[20] = delta_x[19] + nom_x[20];
   out_4354435775177582705[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_7121017768917172192) {
   out_7121017768917172192[0] = -nom_x[0] + true_x[0];
   out_7121017768917172192[1] = -nom_x[1] + true_x[1];
   out_7121017768917172192[2] = -nom_x[2] + true_x[2];
   out_7121017768917172192[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_7121017768917172192[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_7121017768917172192[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_7121017768917172192[6] = -nom_x[7] + true_x[7];
   out_7121017768917172192[7] = -nom_x[8] + true_x[8];
   out_7121017768917172192[8] = -nom_x[9] + true_x[9];
   out_7121017768917172192[9] = -nom_x[10] + true_x[10];
   out_7121017768917172192[10] = -nom_x[11] + true_x[11];
   out_7121017768917172192[11] = -nom_x[12] + true_x[12];
   out_7121017768917172192[12] = -nom_x[13] + true_x[13];
   out_7121017768917172192[13] = -nom_x[14] + true_x[14];
   out_7121017768917172192[14] = -nom_x[15] + true_x[15];
   out_7121017768917172192[15] = -nom_x[16] + true_x[16];
   out_7121017768917172192[16] = -nom_x[17] + true_x[17];
   out_7121017768917172192[17] = -nom_x[18] + true_x[18];
   out_7121017768917172192[18] = -nom_x[19] + true_x[19];
   out_7121017768917172192[19] = -nom_x[20] + true_x[20];
   out_7121017768917172192[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_8943981757272317000) {
   out_8943981757272317000[0] = 1.0;
   out_8943981757272317000[1] = 0;
   out_8943981757272317000[2] = 0;
   out_8943981757272317000[3] = 0;
   out_8943981757272317000[4] = 0;
   out_8943981757272317000[5] = 0;
   out_8943981757272317000[6] = 0;
   out_8943981757272317000[7] = 0;
   out_8943981757272317000[8] = 0;
   out_8943981757272317000[9] = 0;
   out_8943981757272317000[10] = 0;
   out_8943981757272317000[11] = 0;
   out_8943981757272317000[12] = 0;
   out_8943981757272317000[13] = 0;
   out_8943981757272317000[14] = 0;
   out_8943981757272317000[15] = 0;
   out_8943981757272317000[16] = 0;
   out_8943981757272317000[17] = 0;
   out_8943981757272317000[18] = 0;
   out_8943981757272317000[19] = 0;
   out_8943981757272317000[20] = 0;
   out_8943981757272317000[21] = 0;
   out_8943981757272317000[22] = 1.0;
   out_8943981757272317000[23] = 0;
   out_8943981757272317000[24] = 0;
   out_8943981757272317000[25] = 0;
   out_8943981757272317000[26] = 0;
   out_8943981757272317000[27] = 0;
   out_8943981757272317000[28] = 0;
   out_8943981757272317000[29] = 0;
   out_8943981757272317000[30] = 0;
   out_8943981757272317000[31] = 0;
   out_8943981757272317000[32] = 0;
   out_8943981757272317000[33] = 0;
   out_8943981757272317000[34] = 0;
   out_8943981757272317000[35] = 0;
   out_8943981757272317000[36] = 0;
   out_8943981757272317000[37] = 0;
   out_8943981757272317000[38] = 0;
   out_8943981757272317000[39] = 0;
   out_8943981757272317000[40] = 0;
   out_8943981757272317000[41] = 0;
   out_8943981757272317000[42] = 0;
   out_8943981757272317000[43] = 0;
   out_8943981757272317000[44] = 1.0;
   out_8943981757272317000[45] = 0;
   out_8943981757272317000[46] = 0;
   out_8943981757272317000[47] = 0;
   out_8943981757272317000[48] = 0;
   out_8943981757272317000[49] = 0;
   out_8943981757272317000[50] = 0;
   out_8943981757272317000[51] = 0;
   out_8943981757272317000[52] = 0;
   out_8943981757272317000[53] = 0;
   out_8943981757272317000[54] = 0;
   out_8943981757272317000[55] = 0;
   out_8943981757272317000[56] = 0;
   out_8943981757272317000[57] = 0;
   out_8943981757272317000[58] = 0;
   out_8943981757272317000[59] = 0;
   out_8943981757272317000[60] = 0;
   out_8943981757272317000[61] = 0;
   out_8943981757272317000[62] = 0;
   out_8943981757272317000[63] = 0;
   out_8943981757272317000[64] = 0;
   out_8943981757272317000[65] = 0;
   out_8943981757272317000[66] = -0.5*state[4];
   out_8943981757272317000[67] = -0.5*state[5];
   out_8943981757272317000[68] = -0.5*state[6];
   out_8943981757272317000[69] = 0;
   out_8943981757272317000[70] = 0;
   out_8943981757272317000[71] = 0;
   out_8943981757272317000[72] = 0;
   out_8943981757272317000[73] = 0;
   out_8943981757272317000[74] = 0;
   out_8943981757272317000[75] = 0;
   out_8943981757272317000[76] = 0;
   out_8943981757272317000[77] = 0;
   out_8943981757272317000[78] = 0;
   out_8943981757272317000[79] = 0;
   out_8943981757272317000[80] = 0;
   out_8943981757272317000[81] = 0;
   out_8943981757272317000[82] = 0;
   out_8943981757272317000[83] = 0;
   out_8943981757272317000[84] = 0;
   out_8943981757272317000[85] = 0;
   out_8943981757272317000[86] = 0;
   out_8943981757272317000[87] = 0.5*state[3];
   out_8943981757272317000[88] = 0.5*state[6];
   out_8943981757272317000[89] = -0.5*state[5];
   out_8943981757272317000[90] = 0;
   out_8943981757272317000[91] = 0;
   out_8943981757272317000[92] = 0;
   out_8943981757272317000[93] = 0;
   out_8943981757272317000[94] = 0;
   out_8943981757272317000[95] = 0;
   out_8943981757272317000[96] = 0;
   out_8943981757272317000[97] = 0;
   out_8943981757272317000[98] = 0;
   out_8943981757272317000[99] = 0;
   out_8943981757272317000[100] = 0;
   out_8943981757272317000[101] = 0;
   out_8943981757272317000[102] = 0;
   out_8943981757272317000[103] = 0;
   out_8943981757272317000[104] = 0;
   out_8943981757272317000[105] = 0;
   out_8943981757272317000[106] = 0;
   out_8943981757272317000[107] = 0;
   out_8943981757272317000[108] = -0.5*state[6];
   out_8943981757272317000[109] = 0.5*state[3];
   out_8943981757272317000[110] = 0.5*state[4];
   out_8943981757272317000[111] = 0;
   out_8943981757272317000[112] = 0;
   out_8943981757272317000[113] = 0;
   out_8943981757272317000[114] = 0;
   out_8943981757272317000[115] = 0;
   out_8943981757272317000[116] = 0;
   out_8943981757272317000[117] = 0;
   out_8943981757272317000[118] = 0;
   out_8943981757272317000[119] = 0;
   out_8943981757272317000[120] = 0;
   out_8943981757272317000[121] = 0;
   out_8943981757272317000[122] = 0;
   out_8943981757272317000[123] = 0;
   out_8943981757272317000[124] = 0;
   out_8943981757272317000[125] = 0;
   out_8943981757272317000[126] = 0;
   out_8943981757272317000[127] = 0;
   out_8943981757272317000[128] = 0;
   out_8943981757272317000[129] = 0.5*state[5];
   out_8943981757272317000[130] = -0.5*state[4];
   out_8943981757272317000[131] = 0.5*state[3];
   out_8943981757272317000[132] = 0;
   out_8943981757272317000[133] = 0;
   out_8943981757272317000[134] = 0;
   out_8943981757272317000[135] = 0;
   out_8943981757272317000[136] = 0;
   out_8943981757272317000[137] = 0;
   out_8943981757272317000[138] = 0;
   out_8943981757272317000[139] = 0;
   out_8943981757272317000[140] = 0;
   out_8943981757272317000[141] = 0;
   out_8943981757272317000[142] = 0;
   out_8943981757272317000[143] = 0;
   out_8943981757272317000[144] = 0;
   out_8943981757272317000[145] = 0;
   out_8943981757272317000[146] = 0;
   out_8943981757272317000[147] = 0;
   out_8943981757272317000[148] = 0;
   out_8943981757272317000[149] = 0;
   out_8943981757272317000[150] = 0;
   out_8943981757272317000[151] = 0;
   out_8943981757272317000[152] = 0;
   out_8943981757272317000[153] = 1.0;
   out_8943981757272317000[154] = 0;
   out_8943981757272317000[155] = 0;
   out_8943981757272317000[156] = 0;
   out_8943981757272317000[157] = 0;
   out_8943981757272317000[158] = 0;
   out_8943981757272317000[159] = 0;
   out_8943981757272317000[160] = 0;
   out_8943981757272317000[161] = 0;
   out_8943981757272317000[162] = 0;
   out_8943981757272317000[163] = 0;
   out_8943981757272317000[164] = 0;
   out_8943981757272317000[165] = 0;
   out_8943981757272317000[166] = 0;
   out_8943981757272317000[167] = 0;
   out_8943981757272317000[168] = 0;
   out_8943981757272317000[169] = 0;
   out_8943981757272317000[170] = 0;
   out_8943981757272317000[171] = 0;
   out_8943981757272317000[172] = 0;
   out_8943981757272317000[173] = 0;
   out_8943981757272317000[174] = 0;
   out_8943981757272317000[175] = 1.0;
   out_8943981757272317000[176] = 0;
   out_8943981757272317000[177] = 0;
   out_8943981757272317000[178] = 0;
   out_8943981757272317000[179] = 0;
   out_8943981757272317000[180] = 0;
   out_8943981757272317000[181] = 0;
   out_8943981757272317000[182] = 0;
   out_8943981757272317000[183] = 0;
   out_8943981757272317000[184] = 0;
   out_8943981757272317000[185] = 0;
   out_8943981757272317000[186] = 0;
   out_8943981757272317000[187] = 0;
   out_8943981757272317000[188] = 0;
   out_8943981757272317000[189] = 0;
   out_8943981757272317000[190] = 0;
   out_8943981757272317000[191] = 0;
   out_8943981757272317000[192] = 0;
   out_8943981757272317000[193] = 0;
   out_8943981757272317000[194] = 0;
   out_8943981757272317000[195] = 0;
   out_8943981757272317000[196] = 0;
   out_8943981757272317000[197] = 1.0;
   out_8943981757272317000[198] = 0;
   out_8943981757272317000[199] = 0;
   out_8943981757272317000[200] = 0;
   out_8943981757272317000[201] = 0;
   out_8943981757272317000[202] = 0;
   out_8943981757272317000[203] = 0;
   out_8943981757272317000[204] = 0;
   out_8943981757272317000[205] = 0;
   out_8943981757272317000[206] = 0;
   out_8943981757272317000[207] = 0;
   out_8943981757272317000[208] = 0;
   out_8943981757272317000[209] = 0;
   out_8943981757272317000[210] = 0;
   out_8943981757272317000[211] = 0;
   out_8943981757272317000[212] = 0;
   out_8943981757272317000[213] = 0;
   out_8943981757272317000[214] = 0;
   out_8943981757272317000[215] = 0;
   out_8943981757272317000[216] = 0;
   out_8943981757272317000[217] = 0;
   out_8943981757272317000[218] = 0;
   out_8943981757272317000[219] = 1.0;
   out_8943981757272317000[220] = 0;
   out_8943981757272317000[221] = 0;
   out_8943981757272317000[222] = 0;
   out_8943981757272317000[223] = 0;
   out_8943981757272317000[224] = 0;
   out_8943981757272317000[225] = 0;
   out_8943981757272317000[226] = 0;
   out_8943981757272317000[227] = 0;
   out_8943981757272317000[228] = 0;
   out_8943981757272317000[229] = 0;
   out_8943981757272317000[230] = 0;
   out_8943981757272317000[231] = 0;
   out_8943981757272317000[232] = 0;
   out_8943981757272317000[233] = 0;
   out_8943981757272317000[234] = 0;
   out_8943981757272317000[235] = 0;
   out_8943981757272317000[236] = 0;
   out_8943981757272317000[237] = 0;
   out_8943981757272317000[238] = 0;
   out_8943981757272317000[239] = 0;
   out_8943981757272317000[240] = 0;
   out_8943981757272317000[241] = 1.0;
   out_8943981757272317000[242] = 0;
   out_8943981757272317000[243] = 0;
   out_8943981757272317000[244] = 0;
   out_8943981757272317000[245] = 0;
   out_8943981757272317000[246] = 0;
   out_8943981757272317000[247] = 0;
   out_8943981757272317000[248] = 0;
   out_8943981757272317000[249] = 0;
   out_8943981757272317000[250] = 0;
   out_8943981757272317000[251] = 0;
   out_8943981757272317000[252] = 0;
   out_8943981757272317000[253] = 0;
   out_8943981757272317000[254] = 0;
   out_8943981757272317000[255] = 0;
   out_8943981757272317000[256] = 0;
   out_8943981757272317000[257] = 0;
   out_8943981757272317000[258] = 0;
   out_8943981757272317000[259] = 0;
   out_8943981757272317000[260] = 0;
   out_8943981757272317000[261] = 0;
   out_8943981757272317000[262] = 0;
   out_8943981757272317000[263] = 1.0;
   out_8943981757272317000[264] = 0;
   out_8943981757272317000[265] = 0;
   out_8943981757272317000[266] = 0;
   out_8943981757272317000[267] = 0;
   out_8943981757272317000[268] = 0;
   out_8943981757272317000[269] = 0;
   out_8943981757272317000[270] = 0;
   out_8943981757272317000[271] = 0;
   out_8943981757272317000[272] = 0;
   out_8943981757272317000[273] = 0;
   out_8943981757272317000[274] = 0;
   out_8943981757272317000[275] = 0;
   out_8943981757272317000[276] = 0;
   out_8943981757272317000[277] = 0;
   out_8943981757272317000[278] = 0;
   out_8943981757272317000[279] = 0;
   out_8943981757272317000[280] = 0;
   out_8943981757272317000[281] = 0;
   out_8943981757272317000[282] = 0;
   out_8943981757272317000[283] = 0;
   out_8943981757272317000[284] = 0;
   out_8943981757272317000[285] = 1.0;
   out_8943981757272317000[286] = 0;
   out_8943981757272317000[287] = 0;
   out_8943981757272317000[288] = 0;
   out_8943981757272317000[289] = 0;
   out_8943981757272317000[290] = 0;
   out_8943981757272317000[291] = 0;
   out_8943981757272317000[292] = 0;
   out_8943981757272317000[293] = 0;
   out_8943981757272317000[294] = 0;
   out_8943981757272317000[295] = 0;
   out_8943981757272317000[296] = 0;
   out_8943981757272317000[297] = 0;
   out_8943981757272317000[298] = 0;
   out_8943981757272317000[299] = 0;
   out_8943981757272317000[300] = 0;
   out_8943981757272317000[301] = 0;
   out_8943981757272317000[302] = 0;
   out_8943981757272317000[303] = 0;
   out_8943981757272317000[304] = 0;
   out_8943981757272317000[305] = 0;
   out_8943981757272317000[306] = 0;
   out_8943981757272317000[307] = 1.0;
   out_8943981757272317000[308] = 0;
   out_8943981757272317000[309] = 0;
   out_8943981757272317000[310] = 0;
   out_8943981757272317000[311] = 0;
   out_8943981757272317000[312] = 0;
   out_8943981757272317000[313] = 0;
   out_8943981757272317000[314] = 0;
   out_8943981757272317000[315] = 0;
   out_8943981757272317000[316] = 0;
   out_8943981757272317000[317] = 0;
   out_8943981757272317000[318] = 0;
   out_8943981757272317000[319] = 0;
   out_8943981757272317000[320] = 0;
   out_8943981757272317000[321] = 0;
   out_8943981757272317000[322] = 0;
   out_8943981757272317000[323] = 0;
   out_8943981757272317000[324] = 0;
   out_8943981757272317000[325] = 0;
   out_8943981757272317000[326] = 0;
   out_8943981757272317000[327] = 0;
   out_8943981757272317000[328] = 0;
   out_8943981757272317000[329] = 1.0;
   out_8943981757272317000[330] = 0;
   out_8943981757272317000[331] = 0;
   out_8943981757272317000[332] = 0;
   out_8943981757272317000[333] = 0;
   out_8943981757272317000[334] = 0;
   out_8943981757272317000[335] = 0;
   out_8943981757272317000[336] = 0;
   out_8943981757272317000[337] = 0;
   out_8943981757272317000[338] = 0;
   out_8943981757272317000[339] = 0;
   out_8943981757272317000[340] = 0;
   out_8943981757272317000[341] = 0;
   out_8943981757272317000[342] = 0;
   out_8943981757272317000[343] = 0;
   out_8943981757272317000[344] = 0;
   out_8943981757272317000[345] = 0;
   out_8943981757272317000[346] = 0;
   out_8943981757272317000[347] = 0;
   out_8943981757272317000[348] = 0;
   out_8943981757272317000[349] = 0;
   out_8943981757272317000[350] = 0;
   out_8943981757272317000[351] = 1.0;
   out_8943981757272317000[352] = 0;
   out_8943981757272317000[353] = 0;
   out_8943981757272317000[354] = 0;
   out_8943981757272317000[355] = 0;
   out_8943981757272317000[356] = 0;
   out_8943981757272317000[357] = 0;
   out_8943981757272317000[358] = 0;
   out_8943981757272317000[359] = 0;
   out_8943981757272317000[360] = 0;
   out_8943981757272317000[361] = 0;
   out_8943981757272317000[362] = 0;
   out_8943981757272317000[363] = 0;
   out_8943981757272317000[364] = 0;
   out_8943981757272317000[365] = 0;
   out_8943981757272317000[366] = 0;
   out_8943981757272317000[367] = 0;
   out_8943981757272317000[368] = 0;
   out_8943981757272317000[369] = 0;
   out_8943981757272317000[370] = 0;
   out_8943981757272317000[371] = 0;
   out_8943981757272317000[372] = 0;
   out_8943981757272317000[373] = 1.0;
   out_8943981757272317000[374] = 0;
   out_8943981757272317000[375] = 0;
   out_8943981757272317000[376] = 0;
   out_8943981757272317000[377] = 0;
   out_8943981757272317000[378] = 0;
   out_8943981757272317000[379] = 0;
   out_8943981757272317000[380] = 0;
   out_8943981757272317000[381] = 0;
   out_8943981757272317000[382] = 0;
   out_8943981757272317000[383] = 0;
   out_8943981757272317000[384] = 0;
   out_8943981757272317000[385] = 0;
   out_8943981757272317000[386] = 0;
   out_8943981757272317000[387] = 0;
   out_8943981757272317000[388] = 0;
   out_8943981757272317000[389] = 0;
   out_8943981757272317000[390] = 0;
   out_8943981757272317000[391] = 0;
   out_8943981757272317000[392] = 0;
   out_8943981757272317000[393] = 0;
   out_8943981757272317000[394] = 0;
   out_8943981757272317000[395] = 1.0;
   out_8943981757272317000[396] = 0;
   out_8943981757272317000[397] = 0;
   out_8943981757272317000[398] = 0;
   out_8943981757272317000[399] = 0;
   out_8943981757272317000[400] = 0;
   out_8943981757272317000[401] = 0;
   out_8943981757272317000[402] = 0;
   out_8943981757272317000[403] = 0;
   out_8943981757272317000[404] = 0;
   out_8943981757272317000[405] = 0;
   out_8943981757272317000[406] = 0;
   out_8943981757272317000[407] = 0;
   out_8943981757272317000[408] = 0;
   out_8943981757272317000[409] = 0;
   out_8943981757272317000[410] = 0;
   out_8943981757272317000[411] = 0;
   out_8943981757272317000[412] = 0;
   out_8943981757272317000[413] = 0;
   out_8943981757272317000[414] = 0;
   out_8943981757272317000[415] = 0;
   out_8943981757272317000[416] = 0;
   out_8943981757272317000[417] = 1.0;
   out_8943981757272317000[418] = 0;
   out_8943981757272317000[419] = 0;
   out_8943981757272317000[420] = 0;
   out_8943981757272317000[421] = 0;
   out_8943981757272317000[422] = 0;
   out_8943981757272317000[423] = 0;
   out_8943981757272317000[424] = 0;
   out_8943981757272317000[425] = 0;
   out_8943981757272317000[426] = 0;
   out_8943981757272317000[427] = 0;
   out_8943981757272317000[428] = 0;
   out_8943981757272317000[429] = 0;
   out_8943981757272317000[430] = 0;
   out_8943981757272317000[431] = 0;
   out_8943981757272317000[432] = 0;
   out_8943981757272317000[433] = 0;
   out_8943981757272317000[434] = 0;
   out_8943981757272317000[435] = 0;
   out_8943981757272317000[436] = 0;
   out_8943981757272317000[437] = 0;
   out_8943981757272317000[438] = 0;
   out_8943981757272317000[439] = 1.0;
   out_8943981757272317000[440] = 0;
   out_8943981757272317000[441] = 0;
   out_8943981757272317000[442] = 0;
   out_8943981757272317000[443] = 0;
   out_8943981757272317000[444] = 0;
   out_8943981757272317000[445] = 0;
   out_8943981757272317000[446] = 0;
   out_8943981757272317000[447] = 0;
   out_8943981757272317000[448] = 0;
   out_8943981757272317000[449] = 0;
   out_8943981757272317000[450] = 0;
   out_8943981757272317000[451] = 0;
   out_8943981757272317000[452] = 0;
   out_8943981757272317000[453] = 0;
   out_8943981757272317000[454] = 0;
   out_8943981757272317000[455] = 0;
   out_8943981757272317000[456] = 0;
   out_8943981757272317000[457] = 0;
   out_8943981757272317000[458] = 0;
   out_8943981757272317000[459] = 0;
   out_8943981757272317000[460] = 0;
   out_8943981757272317000[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_2068157913889425259) {
   out_2068157913889425259[0] = dt*state[7] + state[0];
   out_2068157913889425259[1] = dt*state[8] + state[1];
   out_2068157913889425259[2] = dt*state[9] + state[2];
   out_2068157913889425259[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_2068157913889425259[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_2068157913889425259[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_2068157913889425259[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_2068157913889425259[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_2068157913889425259[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_2068157913889425259[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_2068157913889425259[10] = state[10];
   out_2068157913889425259[11] = state[11];
   out_2068157913889425259[12] = state[12];
   out_2068157913889425259[13] = state[13];
   out_2068157913889425259[14] = state[14];
   out_2068157913889425259[15] = state[15];
   out_2068157913889425259[16] = state[16];
   out_2068157913889425259[17] = state[17];
   out_2068157913889425259[18] = state[18];
   out_2068157913889425259[19] = state[19];
   out_2068157913889425259[20] = state[20];
   out_2068157913889425259[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7057504128973734560) {
   out_7057504128973734560[0] = 1;
   out_7057504128973734560[1] = 0;
   out_7057504128973734560[2] = 0;
   out_7057504128973734560[3] = 0;
   out_7057504128973734560[4] = 0;
   out_7057504128973734560[5] = 0;
   out_7057504128973734560[6] = dt;
   out_7057504128973734560[7] = 0;
   out_7057504128973734560[8] = 0;
   out_7057504128973734560[9] = 0;
   out_7057504128973734560[10] = 0;
   out_7057504128973734560[11] = 0;
   out_7057504128973734560[12] = 0;
   out_7057504128973734560[13] = 0;
   out_7057504128973734560[14] = 0;
   out_7057504128973734560[15] = 0;
   out_7057504128973734560[16] = 0;
   out_7057504128973734560[17] = 0;
   out_7057504128973734560[18] = 0;
   out_7057504128973734560[19] = 0;
   out_7057504128973734560[20] = 0;
   out_7057504128973734560[21] = 0;
   out_7057504128973734560[22] = 1;
   out_7057504128973734560[23] = 0;
   out_7057504128973734560[24] = 0;
   out_7057504128973734560[25] = 0;
   out_7057504128973734560[26] = 0;
   out_7057504128973734560[27] = 0;
   out_7057504128973734560[28] = dt;
   out_7057504128973734560[29] = 0;
   out_7057504128973734560[30] = 0;
   out_7057504128973734560[31] = 0;
   out_7057504128973734560[32] = 0;
   out_7057504128973734560[33] = 0;
   out_7057504128973734560[34] = 0;
   out_7057504128973734560[35] = 0;
   out_7057504128973734560[36] = 0;
   out_7057504128973734560[37] = 0;
   out_7057504128973734560[38] = 0;
   out_7057504128973734560[39] = 0;
   out_7057504128973734560[40] = 0;
   out_7057504128973734560[41] = 0;
   out_7057504128973734560[42] = 0;
   out_7057504128973734560[43] = 0;
   out_7057504128973734560[44] = 1;
   out_7057504128973734560[45] = 0;
   out_7057504128973734560[46] = 0;
   out_7057504128973734560[47] = 0;
   out_7057504128973734560[48] = 0;
   out_7057504128973734560[49] = 0;
   out_7057504128973734560[50] = dt;
   out_7057504128973734560[51] = 0;
   out_7057504128973734560[52] = 0;
   out_7057504128973734560[53] = 0;
   out_7057504128973734560[54] = 0;
   out_7057504128973734560[55] = 0;
   out_7057504128973734560[56] = 0;
   out_7057504128973734560[57] = 0;
   out_7057504128973734560[58] = 0;
   out_7057504128973734560[59] = 0;
   out_7057504128973734560[60] = 0;
   out_7057504128973734560[61] = 0;
   out_7057504128973734560[62] = 0;
   out_7057504128973734560[63] = 0;
   out_7057504128973734560[64] = 0;
   out_7057504128973734560[65] = 0;
   out_7057504128973734560[66] = 1;
   out_7057504128973734560[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7057504128973734560[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7057504128973734560[69] = 0;
   out_7057504128973734560[70] = 0;
   out_7057504128973734560[71] = 0;
   out_7057504128973734560[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7057504128973734560[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7057504128973734560[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7057504128973734560[75] = 0;
   out_7057504128973734560[76] = 0;
   out_7057504128973734560[77] = 0;
   out_7057504128973734560[78] = 0;
   out_7057504128973734560[79] = 0;
   out_7057504128973734560[80] = 0;
   out_7057504128973734560[81] = 0;
   out_7057504128973734560[82] = 0;
   out_7057504128973734560[83] = 0;
   out_7057504128973734560[84] = 0;
   out_7057504128973734560[85] = 0;
   out_7057504128973734560[86] = 0;
   out_7057504128973734560[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7057504128973734560[88] = 1;
   out_7057504128973734560[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7057504128973734560[90] = 0;
   out_7057504128973734560[91] = 0;
   out_7057504128973734560[92] = 0;
   out_7057504128973734560[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7057504128973734560[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7057504128973734560[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7057504128973734560[96] = 0;
   out_7057504128973734560[97] = 0;
   out_7057504128973734560[98] = 0;
   out_7057504128973734560[99] = 0;
   out_7057504128973734560[100] = 0;
   out_7057504128973734560[101] = 0;
   out_7057504128973734560[102] = 0;
   out_7057504128973734560[103] = 0;
   out_7057504128973734560[104] = 0;
   out_7057504128973734560[105] = 0;
   out_7057504128973734560[106] = 0;
   out_7057504128973734560[107] = 0;
   out_7057504128973734560[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7057504128973734560[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7057504128973734560[110] = 1;
   out_7057504128973734560[111] = 0;
   out_7057504128973734560[112] = 0;
   out_7057504128973734560[113] = 0;
   out_7057504128973734560[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7057504128973734560[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7057504128973734560[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7057504128973734560[117] = 0;
   out_7057504128973734560[118] = 0;
   out_7057504128973734560[119] = 0;
   out_7057504128973734560[120] = 0;
   out_7057504128973734560[121] = 0;
   out_7057504128973734560[122] = 0;
   out_7057504128973734560[123] = 0;
   out_7057504128973734560[124] = 0;
   out_7057504128973734560[125] = 0;
   out_7057504128973734560[126] = 0;
   out_7057504128973734560[127] = 0;
   out_7057504128973734560[128] = 0;
   out_7057504128973734560[129] = 0;
   out_7057504128973734560[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7057504128973734560[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7057504128973734560[132] = 1;
   out_7057504128973734560[133] = 0;
   out_7057504128973734560[134] = 0;
   out_7057504128973734560[135] = 0;
   out_7057504128973734560[136] = 0;
   out_7057504128973734560[137] = 0;
   out_7057504128973734560[138] = 0;
   out_7057504128973734560[139] = 0;
   out_7057504128973734560[140] = 0;
   out_7057504128973734560[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7057504128973734560[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7057504128973734560[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7057504128973734560[144] = 0;
   out_7057504128973734560[145] = 0;
   out_7057504128973734560[146] = 0;
   out_7057504128973734560[147] = 0;
   out_7057504128973734560[148] = 0;
   out_7057504128973734560[149] = 0;
   out_7057504128973734560[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7057504128973734560[151] = 0;
   out_7057504128973734560[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7057504128973734560[153] = 0;
   out_7057504128973734560[154] = 1;
   out_7057504128973734560[155] = 0;
   out_7057504128973734560[156] = 0;
   out_7057504128973734560[157] = 0;
   out_7057504128973734560[158] = 0;
   out_7057504128973734560[159] = 0;
   out_7057504128973734560[160] = 0;
   out_7057504128973734560[161] = 0;
   out_7057504128973734560[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7057504128973734560[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7057504128973734560[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7057504128973734560[165] = 0;
   out_7057504128973734560[166] = 0;
   out_7057504128973734560[167] = 0;
   out_7057504128973734560[168] = 0;
   out_7057504128973734560[169] = 0;
   out_7057504128973734560[170] = 0;
   out_7057504128973734560[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7057504128973734560[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7057504128973734560[173] = 0;
   out_7057504128973734560[174] = 0;
   out_7057504128973734560[175] = 0;
   out_7057504128973734560[176] = 1;
   out_7057504128973734560[177] = 0;
   out_7057504128973734560[178] = 0;
   out_7057504128973734560[179] = 0;
   out_7057504128973734560[180] = 0;
   out_7057504128973734560[181] = 0;
   out_7057504128973734560[182] = 0;
   out_7057504128973734560[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7057504128973734560[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7057504128973734560[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7057504128973734560[186] = 0;
   out_7057504128973734560[187] = 0;
   out_7057504128973734560[188] = 0;
   out_7057504128973734560[189] = 0;
   out_7057504128973734560[190] = 0;
   out_7057504128973734560[191] = 0;
   out_7057504128973734560[192] = 0;
   out_7057504128973734560[193] = 0;
   out_7057504128973734560[194] = 0;
   out_7057504128973734560[195] = 0;
   out_7057504128973734560[196] = 0;
   out_7057504128973734560[197] = 0;
   out_7057504128973734560[198] = 1;
   out_7057504128973734560[199] = 0;
   out_7057504128973734560[200] = 0;
   out_7057504128973734560[201] = 0;
   out_7057504128973734560[202] = 0;
   out_7057504128973734560[203] = 0;
   out_7057504128973734560[204] = 0;
   out_7057504128973734560[205] = 0;
   out_7057504128973734560[206] = 0;
   out_7057504128973734560[207] = 0;
   out_7057504128973734560[208] = 0;
   out_7057504128973734560[209] = 0;
   out_7057504128973734560[210] = 0;
   out_7057504128973734560[211] = 0;
   out_7057504128973734560[212] = 0;
   out_7057504128973734560[213] = 0;
   out_7057504128973734560[214] = 0;
   out_7057504128973734560[215] = 0;
   out_7057504128973734560[216] = 0;
   out_7057504128973734560[217] = 0;
   out_7057504128973734560[218] = 0;
   out_7057504128973734560[219] = 0;
   out_7057504128973734560[220] = 1;
   out_7057504128973734560[221] = 0;
   out_7057504128973734560[222] = 0;
   out_7057504128973734560[223] = 0;
   out_7057504128973734560[224] = 0;
   out_7057504128973734560[225] = 0;
   out_7057504128973734560[226] = 0;
   out_7057504128973734560[227] = 0;
   out_7057504128973734560[228] = 0;
   out_7057504128973734560[229] = 0;
   out_7057504128973734560[230] = 0;
   out_7057504128973734560[231] = 0;
   out_7057504128973734560[232] = 0;
   out_7057504128973734560[233] = 0;
   out_7057504128973734560[234] = 0;
   out_7057504128973734560[235] = 0;
   out_7057504128973734560[236] = 0;
   out_7057504128973734560[237] = 0;
   out_7057504128973734560[238] = 0;
   out_7057504128973734560[239] = 0;
   out_7057504128973734560[240] = 0;
   out_7057504128973734560[241] = 0;
   out_7057504128973734560[242] = 1;
   out_7057504128973734560[243] = 0;
   out_7057504128973734560[244] = 0;
   out_7057504128973734560[245] = 0;
   out_7057504128973734560[246] = 0;
   out_7057504128973734560[247] = 0;
   out_7057504128973734560[248] = 0;
   out_7057504128973734560[249] = 0;
   out_7057504128973734560[250] = 0;
   out_7057504128973734560[251] = 0;
   out_7057504128973734560[252] = 0;
   out_7057504128973734560[253] = 0;
   out_7057504128973734560[254] = 0;
   out_7057504128973734560[255] = 0;
   out_7057504128973734560[256] = 0;
   out_7057504128973734560[257] = 0;
   out_7057504128973734560[258] = 0;
   out_7057504128973734560[259] = 0;
   out_7057504128973734560[260] = 0;
   out_7057504128973734560[261] = 0;
   out_7057504128973734560[262] = 0;
   out_7057504128973734560[263] = 0;
   out_7057504128973734560[264] = 1;
   out_7057504128973734560[265] = 0;
   out_7057504128973734560[266] = 0;
   out_7057504128973734560[267] = 0;
   out_7057504128973734560[268] = 0;
   out_7057504128973734560[269] = 0;
   out_7057504128973734560[270] = 0;
   out_7057504128973734560[271] = 0;
   out_7057504128973734560[272] = 0;
   out_7057504128973734560[273] = 0;
   out_7057504128973734560[274] = 0;
   out_7057504128973734560[275] = 0;
   out_7057504128973734560[276] = 0;
   out_7057504128973734560[277] = 0;
   out_7057504128973734560[278] = 0;
   out_7057504128973734560[279] = 0;
   out_7057504128973734560[280] = 0;
   out_7057504128973734560[281] = 0;
   out_7057504128973734560[282] = 0;
   out_7057504128973734560[283] = 0;
   out_7057504128973734560[284] = 0;
   out_7057504128973734560[285] = 0;
   out_7057504128973734560[286] = 1;
   out_7057504128973734560[287] = 0;
   out_7057504128973734560[288] = 0;
   out_7057504128973734560[289] = 0;
   out_7057504128973734560[290] = 0;
   out_7057504128973734560[291] = 0;
   out_7057504128973734560[292] = 0;
   out_7057504128973734560[293] = 0;
   out_7057504128973734560[294] = 0;
   out_7057504128973734560[295] = 0;
   out_7057504128973734560[296] = 0;
   out_7057504128973734560[297] = 0;
   out_7057504128973734560[298] = 0;
   out_7057504128973734560[299] = 0;
   out_7057504128973734560[300] = 0;
   out_7057504128973734560[301] = 0;
   out_7057504128973734560[302] = 0;
   out_7057504128973734560[303] = 0;
   out_7057504128973734560[304] = 0;
   out_7057504128973734560[305] = 0;
   out_7057504128973734560[306] = 0;
   out_7057504128973734560[307] = 0;
   out_7057504128973734560[308] = 1;
   out_7057504128973734560[309] = 0;
   out_7057504128973734560[310] = 0;
   out_7057504128973734560[311] = 0;
   out_7057504128973734560[312] = 0;
   out_7057504128973734560[313] = 0;
   out_7057504128973734560[314] = 0;
   out_7057504128973734560[315] = 0;
   out_7057504128973734560[316] = 0;
   out_7057504128973734560[317] = 0;
   out_7057504128973734560[318] = 0;
   out_7057504128973734560[319] = 0;
   out_7057504128973734560[320] = 0;
   out_7057504128973734560[321] = 0;
   out_7057504128973734560[322] = 0;
   out_7057504128973734560[323] = 0;
   out_7057504128973734560[324] = 0;
   out_7057504128973734560[325] = 0;
   out_7057504128973734560[326] = 0;
   out_7057504128973734560[327] = 0;
   out_7057504128973734560[328] = 0;
   out_7057504128973734560[329] = 0;
   out_7057504128973734560[330] = 1;
   out_7057504128973734560[331] = 0;
   out_7057504128973734560[332] = 0;
   out_7057504128973734560[333] = 0;
   out_7057504128973734560[334] = 0;
   out_7057504128973734560[335] = 0;
   out_7057504128973734560[336] = 0;
   out_7057504128973734560[337] = 0;
   out_7057504128973734560[338] = 0;
   out_7057504128973734560[339] = 0;
   out_7057504128973734560[340] = 0;
   out_7057504128973734560[341] = 0;
   out_7057504128973734560[342] = 0;
   out_7057504128973734560[343] = 0;
   out_7057504128973734560[344] = 0;
   out_7057504128973734560[345] = 0;
   out_7057504128973734560[346] = 0;
   out_7057504128973734560[347] = 0;
   out_7057504128973734560[348] = 0;
   out_7057504128973734560[349] = 0;
   out_7057504128973734560[350] = 0;
   out_7057504128973734560[351] = 0;
   out_7057504128973734560[352] = 1;
   out_7057504128973734560[353] = 0;
   out_7057504128973734560[354] = 0;
   out_7057504128973734560[355] = 0;
   out_7057504128973734560[356] = 0;
   out_7057504128973734560[357] = 0;
   out_7057504128973734560[358] = 0;
   out_7057504128973734560[359] = 0;
   out_7057504128973734560[360] = 0;
   out_7057504128973734560[361] = 0;
   out_7057504128973734560[362] = 0;
   out_7057504128973734560[363] = 0;
   out_7057504128973734560[364] = 0;
   out_7057504128973734560[365] = 0;
   out_7057504128973734560[366] = 0;
   out_7057504128973734560[367] = 0;
   out_7057504128973734560[368] = 0;
   out_7057504128973734560[369] = 0;
   out_7057504128973734560[370] = 0;
   out_7057504128973734560[371] = 0;
   out_7057504128973734560[372] = 0;
   out_7057504128973734560[373] = 0;
   out_7057504128973734560[374] = 1;
   out_7057504128973734560[375] = 0;
   out_7057504128973734560[376] = 0;
   out_7057504128973734560[377] = 0;
   out_7057504128973734560[378] = 0;
   out_7057504128973734560[379] = 0;
   out_7057504128973734560[380] = 0;
   out_7057504128973734560[381] = 0;
   out_7057504128973734560[382] = 0;
   out_7057504128973734560[383] = 0;
   out_7057504128973734560[384] = 0;
   out_7057504128973734560[385] = 0;
   out_7057504128973734560[386] = 0;
   out_7057504128973734560[387] = 0;
   out_7057504128973734560[388] = 0;
   out_7057504128973734560[389] = 0;
   out_7057504128973734560[390] = 0;
   out_7057504128973734560[391] = 0;
   out_7057504128973734560[392] = 0;
   out_7057504128973734560[393] = 0;
   out_7057504128973734560[394] = 0;
   out_7057504128973734560[395] = 0;
   out_7057504128973734560[396] = 1;
   out_7057504128973734560[397] = 0;
   out_7057504128973734560[398] = 0;
   out_7057504128973734560[399] = 0;
   out_7057504128973734560[400] = 0;
   out_7057504128973734560[401] = 0;
   out_7057504128973734560[402] = 0;
   out_7057504128973734560[403] = 0;
   out_7057504128973734560[404] = 0;
   out_7057504128973734560[405] = 0;
   out_7057504128973734560[406] = 0;
   out_7057504128973734560[407] = 0;
   out_7057504128973734560[408] = 0;
   out_7057504128973734560[409] = 0;
   out_7057504128973734560[410] = 0;
   out_7057504128973734560[411] = 0;
   out_7057504128973734560[412] = 0;
   out_7057504128973734560[413] = 0;
   out_7057504128973734560[414] = 0;
   out_7057504128973734560[415] = 0;
   out_7057504128973734560[416] = 0;
   out_7057504128973734560[417] = 0;
   out_7057504128973734560[418] = 1;
   out_7057504128973734560[419] = 0;
   out_7057504128973734560[420] = 0;
   out_7057504128973734560[421] = 0;
   out_7057504128973734560[422] = 0;
   out_7057504128973734560[423] = 0;
   out_7057504128973734560[424] = 0;
   out_7057504128973734560[425] = 0;
   out_7057504128973734560[426] = 0;
   out_7057504128973734560[427] = 0;
   out_7057504128973734560[428] = 0;
   out_7057504128973734560[429] = 0;
   out_7057504128973734560[430] = 0;
   out_7057504128973734560[431] = 0;
   out_7057504128973734560[432] = 0;
   out_7057504128973734560[433] = 0;
   out_7057504128973734560[434] = 0;
   out_7057504128973734560[435] = 0;
   out_7057504128973734560[436] = 0;
   out_7057504128973734560[437] = 0;
   out_7057504128973734560[438] = 0;
   out_7057504128973734560[439] = 0;
   out_7057504128973734560[440] = 1;
}
void h_4(double *state, double *unused, double *out_1466244038284864942) {
   out_1466244038284864942[0] = state[10] + state[13];
   out_1466244038284864942[1] = state[11] + state[14];
   out_1466244038284864942[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4719075018422975890) {
   out_4719075018422975890[0] = 0;
   out_4719075018422975890[1] = 0;
   out_4719075018422975890[2] = 0;
   out_4719075018422975890[3] = 0;
   out_4719075018422975890[4] = 0;
   out_4719075018422975890[5] = 0;
   out_4719075018422975890[6] = 0;
   out_4719075018422975890[7] = 0;
   out_4719075018422975890[8] = 0;
   out_4719075018422975890[9] = 0;
   out_4719075018422975890[10] = 1;
   out_4719075018422975890[11] = 0;
   out_4719075018422975890[12] = 0;
   out_4719075018422975890[13] = 1;
   out_4719075018422975890[14] = 0;
   out_4719075018422975890[15] = 0;
   out_4719075018422975890[16] = 0;
   out_4719075018422975890[17] = 0;
   out_4719075018422975890[18] = 0;
   out_4719075018422975890[19] = 0;
   out_4719075018422975890[20] = 0;
   out_4719075018422975890[21] = 0;
   out_4719075018422975890[22] = 0;
   out_4719075018422975890[23] = 0;
   out_4719075018422975890[24] = 0;
   out_4719075018422975890[25] = 0;
   out_4719075018422975890[26] = 0;
   out_4719075018422975890[27] = 0;
   out_4719075018422975890[28] = 0;
   out_4719075018422975890[29] = 0;
   out_4719075018422975890[30] = 0;
   out_4719075018422975890[31] = 0;
   out_4719075018422975890[32] = 0;
   out_4719075018422975890[33] = 1;
   out_4719075018422975890[34] = 0;
   out_4719075018422975890[35] = 0;
   out_4719075018422975890[36] = 1;
   out_4719075018422975890[37] = 0;
   out_4719075018422975890[38] = 0;
   out_4719075018422975890[39] = 0;
   out_4719075018422975890[40] = 0;
   out_4719075018422975890[41] = 0;
   out_4719075018422975890[42] = 0;
   out_4719075018422975890[43] = 0;
   out_4719075018422975890[44] = 0;
   out_4719075018422975890[45] = 0;
   out_4719075018422975890[46] = 0;
   out_4719075018422975890[47] = 0;
   out_4719075018422975890[48] = 0;
   out_4719075018422975890[49] = 0;
   out_4719075018422975890[50] = 0;
   out_4719075018422975890[51] = 0;
   out_4719075018422975890[52] = 0;
   out_4719075018422975890[53] = 0;
   out_4719075018422975890[54] = 0;
   out_4719075018422975890[55] = 0;
   out_4719075018422975890[56] = 1;
   out_4719075018422975890[57] = 0;
   out_4719075018422975890[58] = 0;
   out_4719075018422975890[59] = 1;
   out_4719075018422975890[60] = 0;
   out_4719075018422975890[61] = 0;
   out_4719075018422975890[62] = 0;
   out_4719075018422975890[63] = 0;
   out_4719075018422975890[64] = 0;
   out_4719075018422975890[65] = 0;
}
void h_9(double *state, double *unused, double *out_4645040410163205132) {
   out_4645040410163205132[0] = state[10];
   out_4645040410163205132[1] = state[11];
   out_4645040410163205132[2] = state[12];
}
void H_9(double *state, double *unused, double *out_4960264665052566535) {
   out_4960264665052566535[0] = 0;
   out_4960264665052566535[1] = 0;
   out_4960264665052566535[2] = 0;
   out_4960264665052566535[3] = 0;
   out_4960264665052566535[4] = 0;
   out_4960264665052566535[5] = 0;
   out_4960264665052566535[6] = 0;
   out_4960264665052566535[7] = 0;
   out_4960264665052566535[8] = 0;
   out_4960264665052566535[9] = 0;
   out_4960264665052566535[10] = 1;
   out_4960264665052566535[11] = 0;
   out_4960264665052566535[12] = 0;
   out_4960264665052566535[13] = 0;
   out_4960264665052566535[14] = 0;
   out_4960264665052566535[15] = 0;
   out_4960264665052566535[16] = 0;
   out_4960264665052566535[17] = 0;
   out_4960264665052566535[18] = 0;
   out_4960264665052566535[19] = 0;
   out_4960264665052566535[20] = 0;
   out_4960264665052566535[21] = 0;
   out_4960264665052566535[22] = 0;
   out_4960264665052566535[23] = 0;
   out_4960264665052566535[24] = 0;
   out_4960264665052566535[25] = 0;
   out_4960264665052566535[26] = 0;
   out_4960264665052566535[27] = 0;
   out_4960264665052566535[28] = 0;
   out_4960264665052566535[29] = 0;
   out_4960264665052566535[30] = 0;
   out_4960264665052566535[31] = 0;
   out_4960264665052566535[32] = 0;
   out_4960264665052566535[33] = 1;
   out_4960264665052566535[34] = 0;
   out_4960264665052566535[35] = 0;
   out_4960264665052566535[36] = 0;
   out_4960264665052566535[37] = 0;
   out_4960264665052566535[38] = 0;
   out_4960264665052566535[39] = 0;
   out_4960264665052566535[40] = 0;
   out_4960264665052566535[41] = 0;
   out_4960264665052566535[42] = 0;
   out_4960264665052566535[43] = 0;
   out_4960264665052566535[44] = 0;
   out_4960264665052566535[45] = 0;
   out_4960264665052566535[46] = 0;
   out_4960264665052566535[47] = 0;
   out_4960264665052566535[48] = 0;
   out_4960264665052566535[49] = 0;
   out_4960264665052566535[50] = 0;
   out_4960264665052566535[51] = 0;
   out_4960264665052566535[52] = 0;
   out_4960264665052566535[53] = 0;
   out_4960264665052566535[54] = 0;
   out_4960264665052566535[55] = 0;
   out_4960264665052566535[56] = 1;
   out_4960264665052566535[57] = 0;
   out_4960264665052566535[58] = 0;
   out_4960264665052566535[59] = 0;
   out_4960264665052566535[60] = 0;
   out_4960264665052566535[61] = 0;
   out_4960264665052566535[62] = 0;
   out_4960264665052566535[63] = 0;
   out_4960264665052566535[64] = 0;
   out_4960264665052566535[65] = 0;
}
void h_10(double *state, double *unused, double *out_4702588874207177269) {
   out_4702588874207177269[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_4702588874207177269[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_4702588874207177269[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_5625499360276871869) {
   out_5625499360276871869[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5625499360276871869[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5625499360276871869[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_5625499360276871869[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5625499360276871869[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5625499360276871869[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5625499360276871869[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5625499360276871869[7] = 0;
   out_5625499360276871869[8] = 0;
   out_5625499360276871869[9] = 0;
   out_5625499360276871869[10] = 0;
   out_5625499360276871869[11] = 0;
   out_5625499360276871869[12] = 0;
   out_5625499360276871869[13] = 0;
   out_5625499360276871869[14] = 0;
   out_5625499360276871869[15] = 0;
   out_5625499360276871869[16] = 1;
   out_5625499360276871869[17] = 0;
   out_5625499360276871869[18] = 0;
   out_5625499360276871869[19] = 1;
   out_5625499360276871869[20] = 0;
   out_5625499360276871869[21] = 0;
   out_5625499360276871869[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5625499360276871869[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5625499360276871869[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_5625499360276871869[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5625499360276871869[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5625499360276871869[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5625499360276871869[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5625499360276871869[29] = 0;
   out_5625499360276871869[30] = 0;
   out_5625499360276871869[31] = 0;
   out_5625499360276871869[32] = 0;
   out_5625499360276871869[33] = 0;
   out_5625499360276871869[34] = 0;
   out_5625499360276871869[35] = 0;
   out_5625499360276871869[36] = 0;
   out_5625499360276871869[37] = 0;
   out_5625499360276871869[38] = 0;
   out_5625499360276871869[39] = 1;
   out_5625499360276871869[40] = 0;
   out_5625499360276871869[41] = 0;
   out_5625499360276871869[42] = 1;
   out_5625499360276871869[43] = 0;
   out_5625499360276871869[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_5625499360276871869[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_5625499360276871869[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5625499360276871869[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5625499360276871869[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5625499360276871869[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5625499360276871869[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5625499360276871869[51] = 0;
   out_5625499360276871869[52] = 0;
   out_5625499360276871869[53] = 0;
   out_5625499360276871869[54] = 0;
   out_5625499360276871869[55] = 0;
   out_5625499360276871869[56] = 0;
   out_5625499360276871869[57] = 0;
   out_5625499360276871869[58] = 0;
   out_5625499360276871869[59] = 0;
   out_5625499360276871869[60] = 0;
   out_5625499360276871869[61] = 0;
   out_5625499360276871869[62] = 1;
   out_5625499360276871869[63] = 0;
   out_5625499360276871869[64] = 0;
   out_5625499360276871869[65] = 1;
}
void h_12(double *state, double *unused, double *out_3263115080229759064) {
   out_3263115080229759064[0] = state[0];
   out_3263115080229759064[1] = state[1];
   out_3263115080229759064[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8708212647254613931) {
   out_8708212647254613931[0] = 1;
   out_8708212647254613931[1] = 0;
   out_8708212647254613931[2] = 0;
   out_8708212647254613931[3] = 0;
   out_8708212647254613931[4] = 0;
   out_8708212647254613931[5] = 0;
   out_8708212647254613931[6] = 0;
   out_8708212647254613931[7] = 0;
   out_8708212647254613931[8] = 0;
   out_8708212647254613931[9] = 0;
   out_8708212647254613931[10] = 0;
   out_8708212647254613931[11] = 0;
   out_8708212647254613931[12] = 0;
   out_8708212647254613931[13] = 0;
   out_8708212647254613931[14] = 0;
   out_8708212647254613931[15] = 0;
   out_8708212647254613931[16] = 0;
   out_8708212647254613931[17] = 0;
   out_8708212647254613931[18] = 0;
   out_8708212647254613931[19] = 0;
   out_8708212647254613931[20] = 0;
   out_8708212647254613931[21] = 0;
   out_8708212647254613931[22] = 0;
   out_8708212647254613931[23] = 1;
   out_8708212647254613931[24] = 0;
   out_8708212647254613931[25] = 0;
   out_8708212647254613931[26] = 0;
   out_8708212647254613931[27] = 0;
   out_8708212647254613931[28] = 0;
   out_8708212647254613931[29] = 0;
   out_8708212647254613931[30] = 0;
   out_8708212647254613931[31] = 0;
   out_8708212647254613931[32] = 0;
   out_8708212647254613931[33] = 0;
   out_8708212647254613931[34] = 0;
   out_8708212647254613931[35] = 0;
   out_8708212647254613931[36] = 0;
   out_8708212647254613931[37] = 0;
   out_8708212647254613931[38] = 0;
   out_8708212647254613931[39] = 0;
   out_8708212647254613931[40] = 0;
   out_8708212647254613931[41] = 0;
   out_8708212647254613931[42] = 0;
   out_8708212647254613931[43] = 0;
   out_8708212647254613931[44] = 0;
   out_8708212647254613931[45] = 0;
   out_8708212647254613931[46] = 1;
   out_8708212647254613931[47] = 0;
   out_8708212647254613931[48] = 0;
   out_8708212647254613931[49] = 0;
   out_8708212647254613931[50] = 0;
   out_8708212647254613931[51] = 0;
   out_8708212647254613931[52] = 0;
   out_8708212647254613931[53] = 0;
   out_8708212647254613931[54] = 0;
   out_8708212647254613931[55] = 0;
   out_8708212647254613931[56] = 0;
   out_8708212647254613931[57] = 0;
   out_8708212647254613931[58] = 0;
   out_8708212647254613931[59] = 0;
   out_8708212647254613931[60] = 0;
   out_8708212647254613931[61] = 0;
   out_8708212647254613931[62] = 0;
   out_8708212647254613931[63] = 0;
   out_8708212647254613931[64] = 0;
   out_8708212647254613931[65] = 0;
}
void h_35(double *state, double *unused, double *out_2379059252865934280) {
   out_2379059252865934280[0] = state[7];
   out_2379059252865934280[1] = state[8];
   out_2379059252865934280[2] = state[9];
}
void H_35(double *state, double *unused, double *out_8085737075795583266) {
   out_8085737075795583266[0] = 0;
   out_8085737075795583266[1] = 0;
   out_8085737075795583266[2] = 0;
   out_8085737075795583266[3] = 0;
   out_8085737075795583266[4] = 0;
   out_8085737075795583266[5] = 0;
   out_8085737075795583266[6] = 0;
   out_8085737075795583266[7] = 1;
   out_8085737075795583266[8] = 0;
   out_8085737075795583266[9] = 0;
   out_8085737075795583266[10] = 0;
   out_8085737075795583266[11] = 0;
   out_8085737075795583266[12] = 0;
   out_8085737075795583266[13] = 0;
   out_8085737075795583266[14] = 0;
   out_8085737075795583266[15] = 0;
   out_8085737075795583266[16] = 0;
   out_8085737075795583266[17] = 0;
   out_8085737075795583266[18] = 0;
   out_8085737075795583266[19] = 0;
   out_8085737075795583266[20] = 0;
   out_8085737075795583266[21] = 0;
   out_8085737075795583266[22] = 0;
   out_8085737075795583266[23] = 0;
   out_8085737075795583266[24] = 0;
   out_8085737075795583266[25] = 0;
   out_8085737075795583266[26] = 0;
   out_8085737075795583266[27] = 0;
   out_8085737075795583266[28] = 0;
   out_8085737075795583266[29] = 0;
   out_8085737075795583266[30] = 1;
   out_8085737075795583266[31] = 0;
   out_8085737075795583266[32] = 0;
   out_8085737075795583266[33] = 0;
   out_8085737075795583266[34] = 0;
   out_8085737075795583266[35] = 0;
   out_8085737075795583266[36] = 0;
   out_8085737075795583266[37] = 0;
   out_8085737075795583266[38] = 0;
   out_8085737075795583266[39] = 0;
   out_8085737075795583266[40] = 0;
   out_8085737075795583266[41] = 0;
   out_8085737075795583266[42] = 0;
   out_8085737075795583266[43] = 0;
   out_8085737075795583266[44] = 0;
   out_8085737075795583266[45] = 0;
   out_8085737075795583266[46] = 0;
   out_8085737075795583266[47] = 0;
   out_8085737075795583266[48] = 0;
   out_8085737075795583266[49] = 0;
   out_8085737075795583266[50] = 0;
   out_8085737075795583266[51] = 0;
   out_8085737075795583266[52] = 0;
   out_8085737075795583266[53] = 1;
   out_8085737075795583266[54] = 0;
   out_8085737075795583266[55] = 0;
   out_8085737075795583266[56] = 0;
   out_8085737075795583266[57] = 0;
   out_8085737075795583266[58] = 0;
   out_8085737075795583266[59] = 0;
   out_8085737075795583266[60] = 0;
   out_8085737075795583266[61] = 0;
   out_8085737075795583266[62] = 0;
   out_8085737075795583266[63] = 0;
   out_8085737075795583266[64] = 0;
   out_8085737075795583266[65] = 0;
}
void h_32(double *state, double *unused, double *out_2251998733377667084) {
   out_2251998733377667084[0] = state[3];
   out_2251998733377667084[1] = state[4];
   out_2251998733377667084[2] = state[5];
   out_2251998733377667084[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4559702625706355792) {
   out_4559702625706355792[0] = 0;
   out_4559702625706355792[1] = 0;
   out_4559702625706355792[2] = 0;
   out_4559702625706355792[3] = 1;
   out_4559702625706355792[4] = 0;
   out_4559702625706355792[5] = 0;
   out_4559702625706355792[6] = 0;
   out_4559702625706355792[7] = 0;
   out_4559702625706355792[8] = 0;
   out_4559702625706355792[9] = 0;
   out_4559702625706355792[10] = 0;
   out_4559702625706355792[11] = 0;
   out_4559702625706355792[12] = 0;
   out_4559702625706355792[13] = 0;
   out_4559702625706355792[14] = 0;
   out_4559702625706355792[15] = 0;
   out_4559702625706355792[16] = 0;
   out_4559702625706355792[17] = 0;
   out_4559702625706355792[18] = 0;
   out_4559702625706355792[19] = 0;
   out_4559702625706355792[20] = 0;
   out_4559702625706355792[21] = 0;
   out_4559702625706355792[22] = 0;
   out_4559702625706355792[23] = 0;
   out_4559702625706355792[24] = 0;
   out_4559702625706355792[25] = 0;
   out_4559702625706355792[26] = 1;
   out_4559702625706355792[27] = 0;
   out_4559702625706355792[28] = 0;
   out_4559702625706355792[29] = 0;
   out_4559702625706355792[30] = 0;
   out_4559702625706355792[31] = 0;
   out_4559702625706355792[32] = 0;
   out_4559702625706355792[33] = 0;
   out_4559702625706355792[34] = 0;
   out_4559702625706355792[35] = 0;
   out_4559702625706355792[36] = 0;
   out_4559702625706355792[37] = 0;
   out_4559702625706355792[38] = 0;
   out_4559702625706355792[39] = 0;
   out_4559702625706355792[40] = 0;
   out_4559702625706355792[41] = 0;
   out_4559702625706355792[42] = 0;
   out_4559702625706355792[43] = 0;
   out_4559702625706355792[44] = 0;
   out_4559702625706355792[45] = 0;
   out_4559702625706355792[46] = 0;
   out_4559702625706355792[47] = 0;
   out_4559702625706355792[48] = 0;
   out_4559702625706355792[49] = 1;
   out_4559702625706355792[50] = 0;
   out_4559702625706355792[51] = 0;
   out_4559702625706355792[52] = 0;
   out_4559702625706355792[53] = 0;
   out_4559702625706355792[54] = 0;
   out_4559702625706355792[55] = 0;
   out_4559702625706355792[56] = 0;
   out_4559702625706355792[57] = 0;
   out_4559702625706355792[58] = 0;
   out_4559702625706355792[59] = 0;
   out_4559702625706355792[60] = 0;
   out_4559702625706355792[61] = 0;
   out_4559702625706355792[62] = 0;
   out_4559702625706355792[63] = 0;
   out_4559702625706355792[64] = 0;
   out_4559702625706355792[65] = 0;
   out_4559702625706355792[66] = 0;
   out_4559702625706355792[67] = 0;
   out_4559702625706355792[68] = 0;
   out_4559702625706355792[69] = 0;
   out_4559702625706355792[70] = 0;
   out_4559702625706355792[71] = 0;
   out_4559702625706355792[72] = 1;
   out_4559702625706355792[73] = 0;
   out_4559702625706355792[74] = 0;
   out_4559702625706355792[75] = 0;
   out_4559702625706355792[76] = 0;
   out_4559702625706355792[77] = 0;
   out_4559702625706355792[78] = 0;
   out_4559702625706355792[79] = 0;
   out_4559702625706355792[80] = 0;
   out_4559702625706355792[81] = 0;
   out_4559702625706355792[82] = 0;
   out_4559702625706355792[83] = 0;
   out_4559702625706355792[84] = 0;
   out_4559702625706355792[85] = 0;
   out_4559702625706355792[86] = 0;
   out_4559702625706355792[87] = 0;
}
void h_13(double *state, double *unused, double *out_5340354336633023650) {
   out_5340354336633023650[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_5340354336633023650[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_5340354336633023650[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7408247029735667991) {
   out_7408247029735667991[0] = 0;
   out_7408247029735667991[1] = 0;
   out_7408247029735667991[2] = 0;
   out_7408247029735667991[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7408247029735667991[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7408247029735667991[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7408247029735667991[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7408247029735667991[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7408247029735667991[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7408247029735667991[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7408247029735667991[10] = 0;
   out_7408247029735667991[11] = 0;
   out_7408247029735667991[12] = 0;
   out_7408247029735667991[13] = 0;
   out_7408247029735667991[14] = 0;
   out_7408247029735667991[15] = 0;
   out_7408247029735667991[16] = 0;
   out_7408247029735667991[17] = 0;
   out_7408247029735667991[18] = 0;
   out_7408247029735667991[19] = 0;
   out_7408247029735667991[20] = 0;
   out_7408247029735667991[21] = 0;
   out_7408247029735667991[22] = 0;
   out_7408247029735667991[23] = 0;
   out_7408247029735667991[24] = 0;
   out_7408247029735667991[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7408247029735667991[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7408247029735667991[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7408247029735667991[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7408247029735667991[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7408247029735667991[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7408247029735667991[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7408247029735667991[32] = 0;
   out_7408247029735667991[33] = 0;
   out_7408247029735667991[34] = 0;
   out_7408247029735667991[35] = 0;
   out_7408247029735667991[36] = 0;
   out_7408247029735667991[37] = 0;
   out_7408247029735667991[38] = 0;
   out_7408247029735667991[39] = 0;
   out_7408247029735667991[40] = 0;
   out_7408247029735667991[41] = 0;
   out_7408247029735667991[42] = 0;
   out_7408247029735667991[43] = 0;
   out_7408247029735667991[44] = 0;
   out_7408247029735667991[45] = 0;
   out_7408247029735667991[46] = 0;
   out_7408247029735667991[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7408247029735667991[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7408247029735667991[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7408247029735667991[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7408247029735667991[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7408247029735667991[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7408247029735667991[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7408247029735667991[54] = 0;
   out_7408247029735667991[55] = 0;
   out_7408247029735667991[56] = 0;
   out_7408247029735667991[57] = 0;
   out_7408247029735667991[58] = 0;
   out_7408247029735667991[59] = 0;
   out_7408247029735667991[60] = 0;
   out_7408247029735667991[61] = 0;
   out_7408247029735667991[62] = 0;
   out_7408247029735667991[63] = 0;
   out_7408247029735667991[64] = 0;
   out_7408247029735667991[65] = 0;
}
void h_14(double *state, double *unused, double *out_4645040410163205132) {
   out_4645040410163205132[0] = state[10];
   out_4645040410163205132[1] = state[11];
   out_4645040410163205132[2] = state[12];
}
void H_14(double *state, double *unused, double *out_4960264665052566535) {
   out_4960264665052566535[0] = 0;
   out_4960264665052566535[1] = 0;
   out_4960264665052566535[2] = 0;
   out_4960264665052566535[3] = 0;
   out_4960264665052566535[4] = 0;
   out_4960264665052566535[5] = 0;
   out_4960264665052566535[6] = 0;
   out_4960264665052566535[7] = 0;
   out_4960264665052566535[8] = 0;
   out_4960264665052566535[9] = 0;
   out_4960264665052566535[10] = 1;
   out_4960264665052566535[11] = 0;
   out_4960264665052566535[12] = 0;
   out_4960264665052566535[13] = 0;
   out_4960264665052566535[14] = 0;
   out_4960264665052566535[15] = 0;
   out_4960264665052566535[16] = 0;
   out_4960264665052566535[17] = 0;
   out_4960264665052566535[18] = 0;
   out_4960264665052566535[19] = 0;
   out_4960264665052566535[20] = 0;
   out_4960264665052566535[21] = 0;
   out_4960264665052566535[22] = 0;
   out_4960264665052566535[23] = 0;
   out_4960264665052566535[24] = 0;
   out_4960264665052566535[25] = 0;
   out_4960264665052566535[26] = 0;
   out_4960264665052566535[27] = 0;
   out_4960264665052566535[28] = 0;
   out_4960264665052566535[29] = 0;
   out_4960264665052566535[30] = 0;
   out_4960264665052566535[31] = 0;
   out_4960264665052566535[32] = 0;
   out_4960264665052566535[33] = 1;
   out_4960264665052566535[34] = 0;
   out_4960264665052566535[35] = 0;
   out_4960264665052566535[36] = 0;
   out_4960264665052566535[37] = 0;
   out_4960264665052566535[38] = 0;
   out_4960264665052566535[39] = 0;
   out_4960264665052566535[40] = 0;
   out_4960264665052566535[41] = 0;
   out_4960264665052566535[42] = 0;
   out_4960264665052566535[43] = 0;
   out_4960264665052566535[44] = 0;
   out_4960264665052566535[45] = 0;
   out_4960264665052566535[46] = 0;
   out_4960264665052566535[47] = 0;
   out_4960264665052566535[48] = 0;
   out_4960264665052566535[49] = 0;
   out_4960264665052566535[50] = 0;
   out_4960264665052566535[51] = 0;
   out_4960264665052566535[52] = 0;
   out_4960264665052566535[53] = 0;
   out_4960264665052566535[54] = 0;
   out_4960264665052566535[55] = 0;
   out_4960264665052566535[56] = 1;
   out_4960264665052566535[57] = 0;
   out_4960264665052566535[58] = 0;
   out_4960264665052566535[59] = 0;
   out_4960264665052566535[60] = 0;
   out_4960264665052566535[61] = 0;
   out_4960264665052566535[62] = 0;
   out_4960264665052566535[63] = 0;
   out_4960264665052566535[64] = 0;
   out_4960264665052566535[65] = 0;
}
void h_33(double *state, double *unused, double *out_4121750344094741723) {
   out_4121750344094741723[0] = state[16];
   out_4121750344094741723[1] = state[17];
   out_4121750344094741723[2] = state[18];
}
void H_33(double *state, double *unused, double *out_7210449993275110746) {
   out_7210449993275110746[0] = 0;
   out_7210449993275110746[1] = 0;
   out_7210449993275110746[2] = 0;
   out_7210449993275110746[3] = 0;
   out_7210449993275110746[4] = 0;
   out_7210449993275110746[5] = 0;
   out_7210449993275110746[6] = 0;
   out_7210449993275110746[7] = 0;
   out_7210449993275110746[8] = 0;
   out_7210449993275110746[9] = 0;
   out_7210449993275110746[10] = 0;
   out_7210449993275110746[11] = 0;
   out_7210449993275110746[12] = 0;
   out_7210449993275110746[13] = 0;
   out_7210449993275110746[14] = 0;
   out_7210449993275110746[15] = 0;
   out_7210449993275110746[16] = 1;
   out_7210449993275110746[17] = 0;
   out_7210449993275110746[18] = 0;
   out_7210449993275110746[19] = 0;
   out_7210449993275110746[20] = 0;
   out_7210449993275110746[21] = 0;
   out_7210449993275110746[22] = 0;
   out_7210449993275110746[23] = 0;
   out_7210449993275110746[24] = 0;
   out_7210449993275110746[25] = 0;
   out_7210449993275110746[26] = 0;
   out_7210449993275110746[27] = 0;
   out_7210449993275110746[28] = 0;
   out_7210449993275110746[29] = 0;
   out_7210449993275110746[30] = 0;
   out_7210449993275110746[31] = 0;
   out_7210449993275110746[32] = 0;
   out_7210449993275110746[33] = 0;
   out_7210449993275110746[34] = 0;
   out_7210449993275110746[35] = 0;
   out_7210449993275110746[36] = 0;
   out_7210449993275110746[37] = 0;
   out_7210449993275110746[38] = 0;
   out_7210449993275110746[39] = 1;
   out_7210449993275110746[40] = 0;
   out_7210449993275110746[41] = 0;
   out_7210449993275110746[42] = 0;
   out_7210449993275110746[43] = 0;
   out_7210449993275110746[44] = 0;
   out_7210449993275110746[45] = 0;
   out_7210449993275110746[46] = 0;
   out_7210449993275110746[47] = 0;
   out_7210449993275110746[48] = 0;
   out_7210449993275110746[49] = 0;
   out_7210449993275110746[50] = 0;
   out_7210449993275110746[51] = 0;
   out_7210449993275110746[52] = 0;
   out_7210449993275110746[53] = 0;
   out_7210449993275110746[54] = 0;
   out_7210449993275110746[55] = 0;
   out_7210449993275110746[56] = 0;
   out_7210449993275110746[57] = 0;
   out_7210449993275110746[58] = 0;
   out_7210449993275110746[59] = 0;
   out_7210449993275110746[60] = 0;
   out_7210449993275110746[61] = 0;
   out_7210449993275110746[62] = 1;
   out_7210449993275110746[63] = 0;
   out_7210449993275110746[64] = 0;
   out_7210449993275110746[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_775903400974484091) {
  H(in_vec, out_775903400974484091);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4354435775177582705) {
  err_fun(nom_x, delta_x, out_4354435775177582705);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_7121017768917172192) {
  inv_err_fun(nom_x, true_x, out_7121017768917172192);
}
void live_H_mod_fun(double *state, double *out_8943981757272317000) {
  H_mod_fun(state, out_8943981757272317000);
}
void live_f_fun(double *state, double dt, double *out_2068157913889425259) {
  f_fun(state,  dt, out_2068157913889425259);
}
void live_F_fun(double *state, double dt, double *out_7057504128973734560) {
  F_fun(state,  dt, out_7057504128973734560);
}
void live_h_4(double *state, double *unused, double *out_1466244038284864942) {
  h_4(state, unused, out_1466244038284864942);
}
void live_H_4(double *state, double *unused, double *out_4719075018422975890) {
  H_4(state, unused, out_4719075018422975890);
}
void live_h_9(double *state, double *unused, double *out_4645040410163205132) {
  h_9(state, unused, out_4645040410163205132);
}
void live_H_9(double *state, double *unused, double *out_4960264665052566535) {
  H_9(state, unused, out_4960264665052566535);
}
void live_h_10(double *state, double *unused, double *out_4702588874207177269) {
  h_10(state, unused, out_4702588874207177269);
}
void live_H_10(double *state, double *unused, double *out_5625499360276871869) {
  H_10(state, unused, out_5625499360276871869);
}
void live_h_12(double *state, double *unused, double *out_3263115080229759064) {
  h_12(state, unused, out_3263115080229759064);
}
void live_H_12(double *state, double *unused, double *out_8708212647254613931) {
  H_12(state, unused, out_8708212647254613931);
}
void live_h_35(double *state, double *unused, double *out_2379059252865934280) {
  h_35(state, unused, out_2379059252865934280);
}
void live_H_35(double *state, double *unused, double *out_8085737075795583266) {
  H_35(state, unused, out_8085737075795583266);
}
void live_h_32(double *state, double *unused, double *out_2251998733377667084) {
  h_32(state, unused, out_2251998733377667084);
}
void live_H_32(double *state, double *unused, double *out_4559702625706355792) {
  H_32(state, unused, out_4559702625706355792);
}
void live_h_13(double *state, double *unused, double *out_5340354336633023650) {
  h_13(state, unused, out_5340354336633023650);
}
void live_H_13(double *state, double *unused, double *out_7408247029735667991) {
  H_13(state, unused, out_7408247029735667991);
}
void live_h_14(double *state, double *unused, double *out_4645040410163205132) {
  h_14(state, unused, out_4645040410163205132);
}
void live_H_14(double *state, double *unused, double *out_4960264665052566535) {
  H_14(state, unused, out_4960264665052566535);
}
void live_h_33(double *state, double *unused, double *out_4121750344094741723) {
  h_33(state, unused, out_4121750344094741723);
}
void live_H_33(double *state, double *unused, double *out_7210449993275110746) {
  H_33(state, unused, out_7210449993275110746);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
